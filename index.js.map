{"version":3,"sources":["index.jsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function() {\n  'use strict';\n\n  const React = window.React;\n  const ReactDOM = window.ReactDOM;\n\n  const { useState } = React;\n\n  function UseState() {\n    const [count, setCount] = useState(0);\n    const [items, setItem] = useState([]);\n\n    return (\n      <div>\n        <p>You clicked {count} times</p>\n        <button onClick={() => setCount(count + 1)}>Click me</button>\n        <p>Add items</p>\n        <button\n          onClick={() => {\n            const newItems = JSON.parse(JSON.stringify(items));\n\n            newItems.push({ caption: Date.now() });\n\n            setItem(newItems);\n          }}\n        >\n          Add item\n        </button>\n        <ul style={{ maxHeight: 80, overflow: 'scroll' }}>\n          {items.map(item => (\n            <li key={item.caption}>{item.caption}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  ReactDOM.render(<UseState />, document.getElementById('js-use-state'));\n\n  const { useEffect } = React;\n\n  function UseEffect() {\n    const [count, setCount] = useState(0);\n\n    useEffect(\n      () => {\n        document.getElementById(\n          'js-p'\n        ).innerText = `You clicked ${count} times. This element is outside React.`;\n      },\n      // NOTE: execute function if count is modified\n      [count]\n    );\n\n    return (\n      <div>\n        <p>You clicked {count} times</p>\n        <button onClick={() => setCount(count + 1)}>Click me</button>\n      </div>\n    );\n  }\n\n  ReactDOM.render(<UseEffect />, document.getElementById('js-use-effect'));\n\n  const { useRef } = React;\n\n  function PrevCount() {\n    const [count, setCount] = useState(0);\n    const prevCountRef = useRef();\n\n    // NOTE: save previous value\n    useEffect(() => {\n      prevCountRef.current = count;\n    });\n\n    const prevCount = prevCountRef.current;\n\n    return (\n      <div>\n        <p>\n          now: {count}, prev: {prevCount}\n        </p>\n        <button onClick={() => setCount(count + 1)}>Click me</button>\n      </div>\n    );\n  }\n\n  ReactDOM.render(<PrevCount />, document.getElementById('js-prev-count'));\n\n  const { createRef, forwardRef, useImperativeHandle } = React;\n\n  const Input = forwardRef(function Input(props, ref) {\n    const inputRef = useRef();\n\n    useImperativeHandle(ref, () => ({\n      focusToInput: () => {\n        inputRef.current.focus();\n      }\n    }));\n\n    return <input type=\"text\" ref={inputRef} />;\n  });\n\n  function Focus() {\n    const ref = createRef();\n\n    const handleClick = () => {\n      ref.current.focusToInput();\n    };\n\n    return (\n      <div>\n        <Input ref={ref} />\n        <button onClick={handleClick}>focus</button>\n      </div>\n    );\n  }\n\n  ReactDOM.render(<Focus />, document.getElementById('js-focus'));\n\n  const { useReducer } = React;\n\n  const initialState = { count: 0 };\n\n  function reducer(state, action) {\n    const { type } = action;\n\n    switch (type) {\n      case 'inc':\n        return { count: state.count + 1 };\n      case 'dec':\n        return { count: state.count - 1 };\n      default:\n        throw new Error();\n    }\n  }\n\n  function Reducer() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n      <div>\n        <p>Count: {state.count}</p>\n        <button onClick={() => dispatch({ type: 'inc' })}>inc</button>\n        <button onClick={() => dispatch({ type: 'dec' })}>dec</button>\n      </div>\n    );\n  }\n\n  ReactDOM.render(<Reducer />, document.getElementById('js-reducer'));\n})();\n"]}